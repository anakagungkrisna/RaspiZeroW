This note is intended for guiding the setup for RaspberryPiZeroW on Mr.Robot starting from zero. 
1. Download the Pi Imager from the link below, choose the Raspberry Pi OS Legacy (Buster) lite 32 bit version and 
   the SD card, and burn it. Raspbian Buster is more stable that Raspbian Bullseye
	https://www.raspberrypi.com/software/
   To check wether your Raspbian is buster, use command cat /etc/os-release

2. First bootup will ask for username and sudo password. Below is the default username and passwort. 
	username	: pi
	pass		: raspberry

3. Change the default username, password, and hostname.
	For username: https://thepihut.com/blogs/raspberry-pi-tutorials/how-to-change-the-default-account-username-and-password
	For hostname: https://www.cyberciti.biz/faq/ubuntu-change-hostname-command/

4. connect to the internet. For this, the step-by-step guidance is from the link below.
	https://www.linuxbabe.com/command-line/ubuntu-server-16-04-wifi-wpa-supplicant
   To automatically connect to wifi when boot up, follow the step below:
	a. Create an .sh script called startup.sh in /home/user/startup.sh
	b. Fill in by the command below:
		#!/bin/bash
		sudo systemctl stop NetworkManager
		sudo systemctl disable NetworkManager
		sudo ifconfig wlan0 up
		wpa_passphrase "Krisna" ibutuden69 | sudo tee /etc/wpa_supplicant.conf
		sudo killall wpa_supplicant
		sudo wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlan0
		sudo dhclient wlan0
	c. make it executables by running: chmod +x /home/krisna/startup.sh
	d. set a crontab for it by the command: crontab -e which will edit the script using nano
	   insert the command: @reboot /home/user/startup.sh
	e. sometimes the crontab -e does not work. use sudo crontab -e and add the @reboot command as well   
   You can find the startup.sh script in the Setup folder
   DONE!
   
5. Download git: 
	sudo apt-get update
	sudo apt-get upgrade
	sudo apt install git-all 
   Note: github does not support email password authentication anymore. Instead it uses Personal Access Token (PAT)
   To generate one: 
        a. in the upper right corner, click your profile photo, then click settings
        b. In the left sidebar, click developer settings
        c. In the left sidebar, click Personal Access Token
        d. Click generate new token
        e. give your token a descriptive name
   NOTE: the PAT can only be seen once! so make sure you copy and save it somewhere in your local folder!

6. Download ROS melodic:
	Follow the steps on: https://gist.github.com/Tiryoh/76be0ac467c09667ca51b5f8d9f4b3bc
	From the command, skip the set -eu command
	After installation, run source /opt/ros/melodic/setup.bash

7. Download pip3:
	sudo apt-get install python3-pip

   Download pip:
	curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py

8. Several packages needed for ROS:
	pip install pycryptodome (for rostopic list)


9. Working with camera
	official documentation:
	 https://www.raspberrypi.com/documentation/accessories/camera.html#getting-started

	1. perform update: sudo apt-get update
	2. Download library: sudo apt install libcamera-apps-lite
	3. check the /boot/config.txt
	   it needs to have either:
		dtoverlay=vc4-fkms-v3d or dtoverlay=vc4-kms-v3d
	4. enable camera (default is disable)
		sudo raspi-config
		go to interface option -> camera -> enable
	5. By now, you should be ready to test your camera. run
		raspistill -o cam.jpg
	   the command will take a picture and save it in the directory
	   where the command is executed. 

10. Creating catkin workspace
	1. Create directory for your catkin workspace
		mkdir catkin_ws
	2. create an src folder inside catkin_ws
		mkdir src
	3. cd to src folder and run the following command
		catkin_init_workspace
	4. cd to catkin_ws folder and run the following command
		catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3 (for ROS melodic and earlier
	5. You have created your catkin workspace. 

11. set your ROS_MASTER_URI and ROS_IP in the ~/.bashrc file
	command (in remote computer): 
		export ROS_MASTER_URI=http://(YOUR_MASTER_IP):11311
		export ROS_IP=(YOUR_SLAVE_IP)
	command (in master computer):
                export ROS_MASTER_URI=http://(YOUR_MASTER_IP):11311
                export ROS_IP=(YOUR_MASTER_IP)
	this is to avoid master contacting the wrong ip address of the remote computer
	dont forget to source ~/.bashrc
